QUESTION :-  905. Sort Array By Parity
https://leetcode.com/problems/sort-array-by-parity/?envType=daily-question&envId=2023-09-28


SOLUTION :- 

class Solution {
    public int[] sortArrayByParity(int[] nums) {
        // // Two Pointer
        // int j = 0;
        // for(int i=0; i<nums.length; i++)
        // {
        //     if(nums[i]%2 == 0)
        //     {
        //         int temp = nums[i];
        //         nums[i] = nums[j];
        //         nums[j] = temp;
        //         j++;
        //     }
        // }
        // return nums;

        //Approach 2

       List<Integer> evenNumbers = new ArrayList<>();
        List<Integer> oddNumbers = new ArrayList<>();
        
        // Separate even and odd numbers
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] % 2 == 0)
                evenNumbers.add(nums[i]);  // Even number found
            else
                oddNumbers.add(nums[i]);   // Odd number found
        }
        
        // Combine even and odd numbers, placing even numbers first
        for (int num : oddNumbers) {
            evenNumbers.add(num);
        }
        
        // Convert List to int[]
        int[] result = new int[evenNumbers.size()];
        for (int i = 0; i < evenNumbers.size(); i++) {
            result[i] = evenNumbers.get(i);
        }
        
        return result;  // Return the sorted array
    }
}

